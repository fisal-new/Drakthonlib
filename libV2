--[[
    ╔══════════════════════════════════════════════════════════════╗
    ║               DRAKTHON HUB UI LIBRARY V2.0                  ║
    ║          Full Responsive & Premium Black Theme              ║
    ║              Created by: Drakthon Development               ║
    ║                    All Rights Reserved                       ║
    ╚══════════════════════════════════════════════════════════════╝
    
    🎨 Features:
    ✓ Fully Responsive (Mobile, Tablet, PC)
    ✓ Smooth Animations
    ✓ Modern Black Theme
    ✓ Professional Logo Animation
    ✓ Bottom Navigation Bar
    ✓ Search System
    ✓ Rich Components
    
    📱 Usage:
    local Drakthon = loadstring(game:HttpGet("YOUR_URL"))()
    local Window = Drakthon:CreateWindow({Title = "My Hub"})
]]

local DrakthonHub = {}
DrakthonHub.__index = DrakthonHub
DrakthonHub.Version = "2.0.0"

-- ═══════════════════════════════════════════════════════════════
-- 🎨 THEME CONFIGURATION (BLACK THEME)
-- ═══════════════════════════════════════════════════════════════
local Theme = {
    -- Main Colors
    Background = Color3.fromRGB(15, 15, 15),
    BackgroundDark = Color3.fromRGB(10, 10, 10),
    Surface = Color3.fromRGB(25, 25, 25),
    SurfaceLight = Color3.fromRGB(35, 35, 35),
    SurfaceLighter = Color3.fromRGB(45, 45, 45),
    
    -- Accent Colors
    Primary = Color3.fromRGB(245, 73, 144),
    PrimaryDark = Color3.fromRGB(200, 50, 120),
    Secondary = Color3.fromRGB(138, 43, 226),
    Accent = Color3.fromRGB(50, 50, 50),
    
    -- Text Colors
    Text = Color3.fromRGB(255, 255, 255),
    TextSecondary = Color3.fromRGB(180, 180, 180),
    TextDark = Color3.fromRGB(120, 120, 120),
    
    -- Status Colors
    Success = Color3.fromRGB(76, 175, 80),
    Warning = Color3.fromRGB(255, 152, 0),
    Error = Color3.fromRGB(244, 67, 54),
    Info = Color3.fromRGB(33, 150, 243),
    
    -- Special
    Shadow = Color3.fromRGB(0, 0, 0),
    Transparent = Color3.fromRGB(0, 0, 0),
}

-- ═══════════════════════════════════════════════════════════════
-- 🎯 ROBLOX ICONS
-- ═══════════════════════════════════════════════════════════════
local Icons = {
    -- Navigation Icons
    Home = "rbxassetid://3926305904",
    Search = "rbxassetid://4483345998",
    Player = "rbxassetid://3926307971",
    Settings = "rbxassetid://3926305904",
    
    -- Action Icons
    Close = "rbxassetid://3926305904",
    Minimize = "rbxassetid://3926307971",
    Checkmark = "rbxassetid://3926305904",
    Info = "rbxassetid://4483345998",
    
    -- Feature Icons
    Shield = "rbxassetid://3926305904",
    Star = "rbxassetid://3926307971",
    Cart = "rbxassetid://3926305904",
    User = "rbxassetid://3926307971",
}

-- ═══════════════════════════════════════════════════════════════
-- 🛠️ SERVICES
-- ═══════════════════════════════════════════════════════════════
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")

local LocalPlayer = Players.LocalPlayer

-- ═══════════════════════════════════════════════════════════════
-- 🔧 UTILITY FUNCTIONS
-- ═══════════════════════════════════════════════════════════════
local Utilities = {}

function Utilities:Tween(instance, properties, duration, style, direction)
    duration = duration or 0.3
    style = style or Enum.EasingStyle.Quad
    direction = direction or Enum.EasingDirection.Out
    
    local tweenInfo = TweenInfo.new(duration, style, direction)
    local tween = TweenService:Create(instance, tweenInfo, properties)
    tween:Play()
    return tween
end

function Utilities:GetScreenSize()
    return workspace.CurrentCamera.ViewportSize
end

function Utilities:IsMobile()
    return UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
end

function Utilities:IsTablet()
    local screenSize = self:GetScreenSize()
    return self:IsMobile() and screenSize.X > 600
end

function Utilities:CreateIcon(parent, assetId, size, position, imageColor)
    local Icon = Instance.new("ImageLabel")
    Icon.Name = "Icon"
    Icon.Size = size or UDim2.new(0, 20, 0, 20)
    Icon.Position = position or UDim2.new(0, 0, 0, 0)
    Icon.BackgroundTransparency = 1
    Icon.Image = assetId or Icons.Home
    Icon.ImageColor3 = imageColor or Theme.Text
    Icon.ScaleType = Enum.ScaleType.Fit
    Icon.Parent = parent
    return Icon
end

function Utilities:AddCorner(instance, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 8)
    corner.Parent = instance
    return corner
end

function Utilities:AddStroke(instance, color, thickness)
    local stroke = Instance.new("UIStroke")
    stroke.Color = color or Theme.Primary
    stroke.Thickness = thickness or 1
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    stroke.Parent = instance
    return stroke
end

function Utilities:AddGradient(instance, colorSequence, rotation)
    local gradient = Instance.new("UIGradient")
    gradient.Color = colorSequence
    gradient.Rotation = rotation or 0
    gradient.Parent = instance
    return gradient
end

function Utilities:CreateRipple(button)
    button.ClipsDescendants = true
    
    local function ripple()
        local rippleFrame = Instance.new("Frame")
        rippleFrame.Name = "Ripple"
        rippleFrame.AnchorPoint = Vector2.new(0.5, 0.5)
        rippleFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
        rippleFrame.Size = UDim2.new(0, 0, 0, 0)
        rippleFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        rippleFrame.BackgroundTransparency = 0.5
        rippleFrame.BorderSizePixel = 0
        rippleFrame.ZIndex = button.ZIndex + 10
        rippleFrame.Parent = button
        
        self:AddCorner(rippleFrame, 999)
        
        local maxSize = math.max(button.AbsoluteSize.X, button.AbsoluteSize.Y) * 2.5
        
        self:Tween(rippleFrame, {
            Size = UDim2.new(0, maxSize, 0, maxSize),
            BackgroundTransparency = 1
        }, 0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        
        task.delay(0.6, function()
            rippleFrame:Destroy()
        end)
    end
    
    button.MouseButton1Click:Connect(ripple)
end

-- ═══════════════════════════════════════════════════════════════
-- 🎬 LOGO ANIMATION SYSTEM
-- ═══════════════════════════════════════════════════════════════
function DrakthonHub:CreateLogoAnimation(parent)
    local LogoScreen = Instance.new("Frame")
    LogoScreen.Name = "DrakthonLogo"
    LogoScreen.Size = UDim2.new(1, 0, 1, 0)
    LogoScreen.BackgroundColor3 = Theme.BackgroundDark
    LogoScreen.BorderSizePixel = 0
    LogoScreen.ZIndex = 10000
    LogoScreen.Parent = parent

    -- Gradient Background
    local bgGradient = Utilities:AddGradient(LogoScreen, ColorSequence.new{
        ColorSequenceKeypoint.new(0, Theme.BackgroundDark),
        ColorSequenceKeypoint.new(0.5, Theme.Background),
        ColorSequenceKeypoint.new(1, Theme.BackgroundDark)
    }, 45)

    -- Animate background gradient
    task.spawn(function()
        while LogoScreen.Parent do
            Utilities:Tween(bgGradient, {Rotation = bgGradient.Rotation + 360}, 10, Enum.EasingStyle.Linear):Play()
            task.wait(10)
        end
    end)

    -- Logo Container
    local Container = Instance.new("Frame")
    Container.Name = "Container"
    Container.AnchorPoint = Vector2.new(0.5, 0.5)
    Container.Position = UDim2.new(0.5, 0, 0.5, 0)
    Container.Size = UDim2.new(0, 400, 0, 250)
    Container.BackgroundTransparency = 1
    Container.Parent = LogoScreen

    -- Responsive Scale
    local uiScale = Instance.new("UIScale")
    uiScale.Parent = Container
    
    local function updateScale()
        local screenSize = Utilities:GetScreenSize()
        if screenSize.X < 500 then
            uiScale.Scale = 0.5
        elseif screenSize.X < 800 then
            uiScale.Scale = 0.75
        else
            uiScale.Scale = 1
        end
    end
    updateScale()

    -- Pulsing Circles
    for i = 1, 4 do
        local circle = Instance.new("Frame")
        circle.Name = "Circle" .. i
        circle.AnchorPoint = Vector2.new(0.5, 0.5)
        circle.Position = UDim2.new(0.5, 0, 0.3, 0)
        circle.Size = UDim2.new(0, 60 + (i * 25), 0, 60 + (i * 25))
        circle.BackgroundTransparency = 0.9 + (i * 0.02)
        circle.BackgroundColor3 = Theme.Primary
        circle.BorderSizePixel = 0
        circle.ZIndex = 10 - i
        circle.Parent = Container
        
        Utilities:AddCorner(circle, 999)
        
        task.spawn(function()
            task.wait(i * 0.1)
            while circle.Parent do
                Utilities:Tween(circle, {
                    Size = UDim2.new(0, 80 + (i * 25), 0, 80 + (i * 25)),
                    BackgroundTransparency = 1
                }, 2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out):Play()
                task.wait(2)
                circle.Size = UDim2.new(0, 60 + (i * 25), 0, 60 + (i * 25))
                circle.BackgroundTransparency = 0.9 + (i * 0.02)
                task.wait(0.1)
            end
        end)
    end

    -- Main Logo Circle
    local mainCircle = Instance.new("Frame")
    mainCircle.Name = "MainCircle"
    mainCircle.AnchorPoint = Vector2.new(0.5, 0.5)
    mainCircle.Position = UDim2.new(0.5, 0, 0.3, 0)
    mainCircle.Size = UDim2.new(0, 0, 0, 0)
    mainCircle.BackgroundColor3 = Theme.Primary
    mainCircle.BorderSizePixel = 0
    mainCircle.ZIndex = 15
    mainCircle.Parent = Container

    Utilities:AddCorner(mainCircle, 999)
    
    local circleGradient = Utilities:AddGradient(mainCircle, ColorSequence.new{
        ColorSequenceKeypoint.new(0, Theme.Primary),
        ColorSequenceKeypoint.new(0.5, Theme.Secondary),
        ColorSequenceKeypoint.new(1, Theme.Primary)
    }, 0)

    -- Logo Icon
    local logoIcon = Utilities:CreateIcon(mainCircle, Icons.Shield, UDim2.new(0.5, 0, 0.5, 0), UDim2.new(0.25, 0, 0.25, 0))
    logoIcon.ImageTransparency = 1
    logoIcon.ZIndex = 16

    -- Main Title
    local titleText = Instance.new("TextLabel")
    titleText.Name = "Title"
    titleText.Size = UDim2.new(1, 0, 0.25, 0)
    titleText.Position = UDim2.new(0, 0, 0.52, 0)
    titleText.BackgroundTransparency = 1
    titleText.Text = "DRAKTHON"
    titleText.Font = Enum.Font.GothamBold
    titleText.TextSize = 58
    titleText.TextColor3 = Theme.Text
    titleText.TextTransparency = 1
    titleText.TextStrokeTransparency = 0.7
    titleText.TextStrokeColor3 = Theme.Primary
    titleText.Parent = Container

    -- Subtitle
    local subtitle = Instance.new("TextLabel")
    subtitle.Name = "Subtitle"
    subtitle.Size = UDim2.new(1, 0, 0.15, 0)
    subtitle.Position = UDim2.new(0, 0, 0.75, 0)
    subtitle.BackgroundTransparency = 1
    subtitle.Text = "HUB"
    subtitle.Font = Enum.Font.Gotham
    subtitle.TextSize = 28
    subtitle.TextColor3 = Theme.Primary
    subtitle.TextTransparency = 1
    subtitle.Parent = Container

    -- Version
    local version = Instance.new("TextLabel")
    version.Size = UDim2.new(1, 0, 0.12, 0)
    version.Position = UDim2.new(0, 0, 0.88, 0)
    version.BackgroundTransparency = 1
    version.Text = "Version 2.0 - Premium Black Edition"
    version.Font = Enum.Font.Gotham
    version.TextSize = 14
    version.TextColor3 = Theme.TextSecondary
    version.TextTransparency = 1
    version.Parent = Container

    -- Loading Bar Container
    local loadingBG = Instance.new("Frame")
    loadingBG.Name = "LoadingBG"
    loadingBG.AnchorPoint = Vector2.new(0.5, 0)
    loadingBG.Position = UDim2.new(0.5, 0, 1, 25)
    loadingBG.Size = UDim2.new(0.65, 0, 0, 8)
    loadingBG.BackgroundColor3 = Theme.Surface
    loadingBG.BorderSizePixel = 0
    loadingBG.Parent = Container
    
    Utilities:AddCorner(loadingBG, 999)

    -- Loading Bar
    local loadingBar = Instance.new("Frame")
    loadingBar.Name = "LoadingBar"
    loadingBar.Size = UDim2.new(0, 0, 1, 0)
    loadingBar.BackgroundColor3 = Theme.Primary
    loadingBar.BorderSizePixel = 0
    loadingBar.Parent = loadingBG
    
    Utilities:AddCorner(loadingBar, 999)
    
    local barGradient = Utilities:AddGradient(loadingBar, ColorSequence.new{
        ColorSequenceKeypoint.new(0, Theme.Primary),
        ColorSequenceKeypoint.new(0.5, Theme.Secondary),
        ColorSequenceKeypoint.new(1, Theme.Primary)
    }, 0)

    -- Progress Text
    local progressText = Instance.new("TextLabel")
    progressText.AnchorPoint = Vector2.new(0.5, 0)
    progressText.Position = UDim2.new(0.5, 0, 1, 18)
    progressText.Size = UDim2.new(0, 100, 0, 25)
    progressText.BackgroundTransparency = 1
    progressText.Text = "0%"
    progressText.Font = Enum.Font.GothamBold
    progressText.TextSize = 16
    progressText.TextColor3 = Theme.Primary
    progressText.TextTransparency = 1
    progressText.Parent = loadingBG

    -- Status Text
    local statusText = Instance.new("TextLabel")
    statusText.AnchorPoint = Vector2.new(0.5, 1)
    statusText.Position = UDim2.new(0.5, 0, 0, -12)
    statusText.Size = UDim2.new(1, 0, 0, 20)
    statusText.BackgroundTransparency = 1
    statusText.Text = "Initializing..."
    statusText.Font = Enum.Font.Gotham
    statusText.TextSize = 14
    statusText.TextColor3 = Theme.TextSecondary
    statusText.TextTransparency = 1
    statusText.Parent = loadingBG

    -- ═══════════════════════════════════════════════════════════════
    -- 🎭 ANIMATION SEQUENCE
    -- ═══════════════════════════════════════════════════════════════
    task.spawn(function()
        task.wait(0.3)
        
        -- Circle Appear
        Utilities:Tween(mainCircle, {Size = UDim2.new(0, 90, 0, 90)}, 0.8, Enum.EasingStyle.Back):Play()
        task.wait(0.4)
        
        -- Icon Fade
        Utilities:Tween(logoIcon, {ImageTransparency = 0}, 0.5):Play()
        
        -- Rotate Gradient
        task.spawn(function()
            while LogoScreen.Parent do
                circleGradient.Rotation = (circleGradient.Rotation + 3) % 360
                barGradient.Rotation = (barGradient.Rotation + 2) % 360
                task.wait(0.03)
            end
        end)
        
        task.wait(0.5)
        
        -- Text Appear
        Utilities:Tween(titleText, {TextTransparency = 0, TextStrokeTransparency = 0.3}, 0.6):Play()
        task.wait(0.2)
        Utilities:Tween(subtitle, {TextTransparency = 0}, 0.6):Play()
        task.wait(0.2)
        Utilities:Tween(version, {TextTransparency = 0.4}, 0.5):Play()
        Utilities:Tween(statusText, {TextTransparency = 0.3}, 0.5):Play()
        Utilities:Tween(progressText, {TextTransparency = 0}, 0.5):Play()
        
        task.wait(0.4)
        
        -- Loading Progress
        local stages = {
            {progress = 0.15, status = "Loading Core Systems...", time = 0.3},
            {progress = 0.35, status = "Initializing UI Framework...", time = 0.4},
            {progress = 0.55, status = "Setting Up Components...", time = 0.35},
            {progress = 0.75, status = "Applying Theme...", time = 0.3},
            {progress = 0.90, status = "Finalizing Setup...", time = 0.35},
            {progress = 1.00, status = "Ready!", time = 0.4},
        }
        
        for _, stage in ipairs(stages) do
            statusText.Text = stage.status
            Utilities:Tween(loadingBar, {Size = UDim2.new(stage.progress, 0, 1, 0)}, stage.time):Play()
            
            local currentPercent = tonumber(progressText.Text:match("%d+")) or 0
            local targetPercent = math.floor(stage.progress * 100)
            
            for i = currentPercent, targetPercent do
                progressText.Text = i .. "%"
                task.wait(stage.time / (targetPercent - currentPercent + 1))
            end
        end
        
        task.wait(0.6)
        
        -- Fade Out
        Utilities:Tween(LogoScreen, {BackgroundTransparency = 1}, 0.7):Play()
        Utilities:Tween(mainCircle, {BackgroundTransparency = 1}, 0.7):Play()
        Utilities:Tween(logoIcon, {ImageTransparency = 1}, 0.7):Play()
        Utilities:Tween(titleText, {TextTransparency = 1, TextStrokeTransparency = 1}, 0.7):Play()
        Utilities:Tween(subtitle, {TextTransparency = 1}, 0.7):Play()
        Utilities:Tween(version, {TextTransparency = 1}, 0.7):Play()
        Utilities:Tween(loadingBG, {BackgroundTransparency = 1}, 0.7):Play()
        Utilities:Tween(loadingBar, {BackgroundTransparency = 1}, 0.7):Play()
        Utilities:Tween(progressText, {TextTransparency = 1}, 0.7):Play()
        Utilities:Tween(statusText, {TextTransparency = 1}, 0.7):Play()
        
        task.wait(0.8)
        LogoScreen:Destroy()
    end)

    return LogoScreen
end

-- ═══════════════════════════════════════════════════════════════
-- 🪟 CREATE MAIN WINDOW
-- ═══════════════════════════════════════════════════════════════
function DrakthonHub:CreateWindow(config)
    config = config or {}
    config.Title = config.Title or "Drakthon Hub"
    config.Subtitle = config.Subtitle or "Premium Edition"
    config.Size = config.Size or UDim2.new(0, 650, 0, 480)
    config.ShowLogo = config.ShowLogo ~= false
    config.Theme = config.Theme or "Dark"
    
    -- Create ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "DrakthonHubV2_" .. tostring(math.random(1000, 9999))
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.DisplayOrder = 999999999
    
    -- Protection
    if gethui then
        ScreenGui.Parent = gethui()
    elseif syn and syn.protect_gui then
        syn.protect_gui(ScreenGui)
        ScreenGui.Parent = CoreGui
    else
        ScreenGui.Parent = CoreGui
    end

    -- Show Logo
    if config.ShowLogo then
        self:CreateLogoAnimation(ScreenGui)
    end

    -- Main Container
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainContainer"
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    MainFrame.Size = UDim2.new(0, 0, 0, 0)
    MainFrame.BackgroundColor3 = Theme.Background
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = false
    MainFrame.Parent = ScreenGui

    if config.ShowLogo then
        task.wait(4.2)
    end

    Utilities:AddCorner(MainFrame, 16)
    Utilities:AddStroke(MainFrame, Theme.Surface, 1.5)

    -- Shadow Effect
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    shadow.Position = UDim2.new(0.5, 0, 0.5, 8)
    shadow.Size = UDim2.new(1, 50, 1, 50)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://6014261993"
    shadow.ImageColor3 = Theme.Shadow
    shadow.ImageTransparency = 0.3
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(99, 99, 99, 99)
    shadow.ZIndex = MainFrame.ZIndex - 1
    shadow.Parent = MainFrame

    -- Responsive System
    local function updateResponsive()
        local screenSize = Utilities:GetScreenSize()
        local targetSize = config.Size
        
        if screenSize.X < 500 then
            targetSize = UDim2.new(0.95, 0, 0.92, 0)
        elseif screenSize.X < 800 then
            targetSize = UDim2.new(0, 550, 0, 420)
        end
        
        if MainFrame.Size.X.Offset > 0 then
            Utilities:Tween(MainFrame, {Size = targetSize}, 0.3):Play()
        end
    end
    
    workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(updateResponsive)

    -- Window Object
    local Window = {
        GUI = ScreenGui,
        Main = MainFrame,
        Shadow = shadow,
        Config = config,
        Tabs = {},
        CurrentTab = nil,
        BottomButtons = {},
    }

    -- Build UI Components
    self:BuildTopBar(MainFrame, Window)
    self:BuildSearchBar(MainFrame, Window)
    self:BuildNavigation(MainFrame, Window)
    self:BuildContent(MainFrame, Window)
    self:BuildBottomBar(MainFrame, Window)

    -- Appear Animation
    Utilities:Tween(MainFrame, {Size = config.Size}, 0.6, Enum.EasingStyle.Back):Play()
    
    updateResponsive()

    return Window
end

-- ═══════════════════════════════════════════════════════════════
-- 🔝 TOP BAR
-- ═══════════════════════════════════════════════════════════════
function DrakthonHub:BuildTopBar(parent, window)
    local TopBar = Instance.new("Frame")
    TopBar.Name = "TopBar"
    TopBar.Size = UDim2.new(1, 0, 0, 60)
    TopBar.BackgroundColor3 = Theme.Surface
    TopBar.BorderSizePixel = 0
    TopBar.Parent = parent

    Utilities:AddCorner(TopBar, 16)

    -- Cover Bottom Corners
    local coverBottom = Instance.new("Frame")
    coverBottom.Size = UDim2.new(1, 0, 0, 16)
    coverBottom.Position = UDim2.new(0, 0, 1, -16)
    coverBottom.BackgroundColor3 = Theme.Surface
    coverBottom.BorderSizePixel = 0
    coverBottom.Parent = TopBar

    -- Accent Line
    local accentLine = Instance.new("Frame")
    accentLine.Size = UDim2.new(1, 0, 0, 3)
    accentLine.Position = UDim2.new(0, 0, 1, 0)
    accentLine.BorderSizePixel = 0
    accentLine.Parent = TopBar

    local lineGradient = Utilities:AddGradient(accentLine, ColorSequence.new{
        ColorSequenceKeypoint.new(0, Theme.Primary),
        ColorSequenceKeypoint.new(0.5, Theme.Secondary),
        ColorSequenceKeypoint.new(1, Theme.Primary)
    }, 90)

    -- Animate Gradient
    task.spawn(function()
        while accentLine.Parent do
            Utilities:Tween(lineGradient, {Rotation = lineGradient.Rotation + 360}, 8, Enum.EasingStyle.Linear):Play()
            task.wait(8)
        end
    end)

    -- Logo Section
    local logoFrame = Instance.new("Frame")
    logoFrame.Size = UDim2.new(0, 280, 1, 0)
    logoFrame.Position = UDim2.new(0, 20, 0, 0)
    logoFrame.BackgroundTransparency = 1
    logoFrame.Parent = TopBar

    -- Logo Circle
    local logoCircle = Instance.new("Frame")
    logoCircle.AnchorPoint = Vector2.new(0, 0.5)
    logoCircle.Position = UDim2.new(0, 0, 0.5, 0)
    logoCircle.Size = UDim2.new(0, 40, 0, 40)
    logoCircle.BackgroundColor3 = Theme.Primary
    logoCircle.BorderSizePixel = 0
    logoCircle.Parent = logoFrame

    Utilities:AddCorner(logoCircle, 999)
    
    local logoGrad = Utilities:AddGradient(logoCircle, ColorSequence.new{
        ColorSequenceKeypoint.new(0, Theme.Primary),
        ColorSequenceKeypoint.new(1, Theme.Secondary)
    }, 45)

    task.spawn(function()
        while logoCircle.Parent do
            logoGrad.Rotation = (logoGrad.Rotation + 2) % 360
            task.wait(0.05)
        end
    end)

    local logoIcon = Utilities:CreateIcon(logoCircle, Icons.Shield, UDim2.new(0.6, 0, 0.6, 0), UDim2.new(0.2, 0, 0.2, 0))

    -- Title
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Position = UDim2.new(0, 50, 0, 10)
    titleLabel.Size = UDim2.new(1, -50, 0, 23)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = window.Config.Title
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 19
    titleLabel.TextColor3 = Theme.Text
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = logoFrame

    -- Subtitle
    local subtitleLabel = Instance.new("TextLabel")
    subtitleLabel.Position = UDim2.new(0, 50, 0, 33)
    subtitleLabel.Size = UDim2.new(1, -50, 0, 16)
    subtitleLabel.BackgroundTransparency = 1
    subtitleLabel.Text = window.Config.Subtitle
    subtitleLabel.Font = Enum.Font.Gotham
    subtitleLabel.TextSize = 13
    subtitleLabel.TextColor3 = Theme.Primary
    subtitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    subtitleLabel.Parent = logoFrame

    -- Control Buttons
    local controlsFrame = Instance.new("Frame")
    controlsFrame.AnchorPoint = Vector2.new(1, 0.5)
    controlsFrame.Position = UDim2.new(1, -20, 0.5, 0)
    controlsFrame.Size = UDim2.new(0, 90, 0, 38)
    controlsFrame.BackgroundTransparency = 1
    controlsFrame.Parent = TopBar

    local controlsLayout = Instance.new("UIListLayout")
    controlsLayout.FillDirection = Enum.FillDirection.Horizontal
    controlsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
    controlsLayout.VerticalAlignment = Enum.VerticalAlignment.Center
    controlsLayout.Padding = UDim.new(0, 10)
    controlsLayout.Parent = controlsFrame

    local function createControlBtn(text, color, callback)
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(0, 38, 0, 38)
        btn.BackgroundColor3 = Theme.SurfaceLight
        btn.BorderSizePixel = 0
        btn.Text = ""
        btn.Parent = controlsFrame

        Utilities:AddCorner(btn, 10)
        Utilities:CreateRipple(btn)

        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, 0, 1, 0)
        label.BackgroundTransparency = 1
        label.Text = text
        label.Font = Enum.Font.GothamBold
        label.TextSize = 20
        label.TextColor3 = Theme.Text
        label.Parent = btn

        btn.MouseEnter:Connect(function()
            Utilities:Tween(btn, {BackgroundColor3 = color}, 0.2):Play()
            Utilities:Tween(btn, {Size = UDim2.new(0, 40, 0, 40)}, 0.2):Play()
        end)

        btn.MouseLeave:Connect(function()
            Utilities:Tween(btn, {BackgroundColor3 = Theme.SurfaceLight}, 0.2):Play()
            Utilities:Tween(btn, {Size = UDim2.new(0, 38, 0, 38)}, 0.2):Play()
        end)

        btn.MouseButton1Click:Connect(callback)
        return btn
    end

    -- Minimize
    local minimized = false
    local originalSize = parent.Size
    createControlBtn("−", Theme.Primary, function()
        minimized = not minimized
        if minimized then
            Utilities:Tween(parent, {Size = UDim2.new(parent.Size.X.Scale, parent.Size.X.Offset, 0, 60)}, 0.3):Play()
        else
            Utilities:Tween(parent, {Size = originalSize}, 0.3):Play()
        end
    end)

    -- Close
    createControlBtn("✕", Color3.fromRGB(255, 60, 60), function()
        Utilities:Tween(parent, {Size = UDim2.new(0, 0, 0, 0)}, 0.4, Enum.EasingStyle.Back, Enum.EasingDirection.In):Play()
        Utilities:Tween(window.Shadow, {ImageTransparency = 1}, 0.4):Play()
        task.wait(0.5)
        window.GUI:Destroy()
    end)

    -- Dragging
    local dragging, dragInput, mousePos, framePos

    TopBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            mousePos = input.Position
            framePos = parent.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    TopBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - mousePos
            Utilities:Tween(parent, {
                Position = UDim2.new(
                    framePos.X.Scale,
                    framePos.X.Offset + delta.X,
                    framePos.Y.Scale,
                    framePos.Y.Offset + delta.Y
                )
            }, 0.15, Enum.EasingStyle.Quad):Play()
        end
    end)

    window.TopBar = TopBar
end

-- ═══════════════════════════════════════════════════════════════
-- 🔍 SEARCH BAR
-- ═══════════════════════════════════════════════════════════════
function DrakthonHub:BuildSearchBar(parent, window)
    local SearchBar = Instance.new("Frame")
    SearchBar.Name = "SearchBar"
    SearchBar.Position = UDim2.new(0, 20, 0, 70)
    SearchBar.Size = UDim2.new(1, -40, 0, 45)
    SearchBar.BackgroundColor3 = Theme.Surface
    SearchBar.BorderSizePixel = 0
    SearchBar.Parent = parent

    Utilities:AddCorner(SearchBar, 12)

    local searchIcon = Utilities:CreateIcon(SearchBar, Icons.Search, UDim2.new(0, 22, 0, 22), UDim2.new(0, 15, 0.5, -11), Theme.TextSecondary)

    local searchBox = Instance.new("TextBox")
    searchBox.Position = UDim2.new(0, 50, 0, 0)
    searchBox.Size = UDim2.new(1, -60, 1, 0)
    searchBox.BackgroundTransparency = 1
    searchBox.Font = Enum.Font.Gotham
    searchBox.TextSize = 15
    searchBox.TextColor3 = Theme.Text
    searchBox.PlaceholderText = "Search features, tabs, settings..."
    searchBox.PlaceholderColor3 = Theme.TextSecondary
    searchBox.Text = ""
    searchBox.ClearTextOnFocus = false
    searchBox.TextXAlignment = Enum.TextXAlignment.Left
    searchBox.Parent = SearchBar

    searchBox.Focused:Connect(function()
        Utilities:Tween(SearchBar, {BackgroundColor3 = Theme.SurfaceLight}, 0.2):Play()
        Utilities:Tween(searchIcon, {ImageColor3 = Theme.Primary}, 0.2):Play()
    end)

    searchBox.FocusLost:Connect(function()
        Utilities:Tween(SearchBar, {BackgroundColor3 = Theme.Surface}, 0.2):Play()
        Utilities:Tween(searchIcon, {ImageColor3 = Theme.TextSecondary}, 0.2):Play()
    end)

    window.SearchBar = SearchBar
end

-- ═══════════════════════════════════════════════════════════════
-- 🧭 NAVIGATION TABS
-- ═══════════════════════════════════════════════════════════════
function DrakthonHub:BuildNavigation(parent, window)
    local NavBar = Instance.new("Frame")
    NavBar.Name = "NavigationBar"
    NavBar.Position = UDim2.new(0, 20, 0, 125)
    NavBar.Size = UDim2.new(1, -40, 0, 58)
    NavBar.BackgroundColor3 = Theme.Surface
    NavBar.BorderSizePixel = 0
    NavBar.Parent = parent

    Utilities:AddCorner(NavBar, 29)

    local btnContainer = Instance.new("Frame")
    btnContainer.Name = "ButtonContainer"
    btnContainer.Size = UDim2.new(1, -30, 1, -16)
    btnContainer.Position = UDim2.new(0, 15, 0, 8)
    btnContainer.BackgroundTransparency = 1
    btnContainer.Parent = NavBar

    local layout = Instance.new("UIListLayout")
    layout.FillDirection = Enum.FillDirection.Horizontal
    layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    layout.VerticalAlignment = Enum.VerticalAlignment.Center
    layout.Padding = UDim.new(0, 12)
    layout.Parent = btnContainer

    local glider = Instance.new("Frame")
    glider.Name = "Glider"
    glider.Size = UDim2.new(0, 65, 0, 42)
    glider.BackgroundColor3 = Theme.SurfaceLighter
    glider.BorderSizePixel = 0
    glider.ZIndex = NavBar.ZIndex
    glider.Parent = btnContainer

    Utilities:AddCorner(glider, 21)

    window.NavBar = NavBar
    window.Glider = glider
    window.ButtonContainer = btnContainer
end

-- ═══════════════════════════════════════════════════════════════
-- 📄 CONTENT AREA
-- ═══════════════════════════════════════════════════════════════
function DrakthonHub:BuildContent(parent, window)
    local ContentArea = Instance.new("Frame")
    ContentArea.Name = "ContentArea"
    ContentArea.Position = UDim2.new(0, 20, 0, 193)
    ContentArea.Size = UDim2.new(1, -40, 1, -263)
    ContentArea.BackgroundColor3 = Theme.Surface
    ContentArea.BorderSizePixel = 0
    ContentArea.Parent = parent

    Utilities:AddCorner(ContentArea, 14)

    local TabContainer = Instance.new("Frame")
    TabContainer.Name = "TabContainer"
    TabContainer.Size = UDim2.new(1, 0, 1, 0)
    TabContainer.BackgroundTransparency = 1
    TabContainer.Parent = ContentArea

    window.ContentArea = ContentArea
    window.TabContainer = TabContainer
end

-- ═══════════════════════════════════════════════════════════════
-- 📱 BOTTOM NAVIGATION BAR (من الكود HTML)
-- ═══════════════════════════════════════════════════════════════
function DrakthonHub:BuildBottomBar(parent, window)
    local BottomBar = Instance.new("Frame")
    BottomBar.Name = "BottomNavigationBar"
    BottomBar.AnchorPoint = Vector2.new(0.5, 1)
    BottomBar.Position = UDim2.new(0.5, 0, 1, -15)
    BottomBar.Size = UDim2.new(0, 280, 0, 45)
    BottomBar.BackgroundColor3 = Theme.Primary
    BottomBar.BorderSizePixel = 0
    BottomBar.ZIndex = 100
    BottomBar.Parent = parent

    Utilities:AddCorner(BottomBar, 22)

    -- Gradient Effect
    local barGradient = Utilities:AddGradient(BottomBar, ColorSequence.new{
        ColorSequenceKeypoint.new(0, Theme.Primary),
        ColorSequenceKeypoint.new(0.5, Theme.Secondary),
        ColorSequenceKeypoint.new(1, Theme.Primary)
    }, 90)

    -- Shadow
    local barShadow = Instance.new("Frame")
    barShadow.AnchorPoint = Vector2.new(0.5, 0.5)
    barShadow.Position = UDim2.new(0.5, 0, 0.5, 3)
    barShadow.Size = UDim2.new(1, 10, 1, 10)
    barShadow.BackgroundColor3 = Theme.Primary
    barShadow.BackgroundTransparency = 0.8
    barShadow.BorderSizePixel = 0
    barShadow.ZIndex = BottomBar.ZIndex - 1
    barShadow.Parent = BottomBar

    Utilities:AddCorner(barShadow, 24)

    local btnLayout = Instance.new("UIListLayout")
    btnLayout.FillDirection = Enum.FillDirection.Horizontal
    btnLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    btnLayout.VerticalAlignment = Enum.VerticalAlignment.Center
    btnLayout.Padding = UDim.new(0, 15)
    btnLayout.Parent = BottomBar

    window.BottomBar = BottomBar
    window.BottomBtnLayout = btnLayout
end

function DrakthonHub:AddBottomButton(window, icon, callback)
    local btn = Instance.new("TextButton")
    btn.Name = "BottomButton"
    btn.Size = UDim2.new(0, 45, 0, 45)
    btn.BackgroundTransparency = 1
    btn.Text = ""
    btn.ZIndex = window.BottomBar.ZIndex + 1
    btn.Parent = window.BottomBar

    Utilities:AddCorner(btn, 999)

    local iconImg = Utilities:CreateIcon(btn, icon, UDim2.new(0, 24, 0, 24), UDim2.new(0.5, -12, 0.5, -12), Theme.Text)
    iconImg.ZIndex = btn.ZIndex + 1

    btn.MouseEnter:Connect(function()
        Utilities:Tween(btn, {Size = UDim2.new(0, 48, 0, 48)}, 0.2, Enum.EasingStyle.Back):Play()
        Utilities:Tween(iconImg, {ImageColor3 = Theme.Background}, 0.2):Play()
    end)

    btn.MouseLeave:Connect(function()
        Utilities:Tween(btn, {Size = UDim2.new(0, 45, 0, 45)}, 0.2):Play()
        Utilities:Tween(iconImg, {ImageColor3 = Theme.Text}, 0.2):Play()
    end)

    btn.MouseButton1Click:Connect(function()
        Utilities:CreateRipple(btn)
        if callback then callback() end
    end)

    table.insert(window.BottomButtons, btn)
    return btn
end

-- ═══════════════════════════════════════════════════════════════
-- 📑 CREATE TAB
-- ═══════════════════════════════════════════════════════════════
function DrakthonHub:CreateTab(window, config)
    config = config or {}
    config.Name = config.Name or "Tab"
    config.Icon = config.Icon or Icons.Home
    config.Notification = config.Notification

    -- Tab Button
    local TabBtn = Instance.new("TextButton")
    TabBtn.Name = config.Name
    TabBtn.Size = UDim2.new(0, 65, 0, 42)
    TabBtn.BackgroundTransparency = 1
    TabBtn.Text = ""
    TabBtn.ZIndex = window.NavBar.ZIndex + 2
    TabBtn.Parent = window.ButtonContainer

    local icon = Utilities:CreateIcon(TabBtn, config.Icon, UDim2.new(0, 26, 0, 26), UDim2.new(0.5, -13, 0.5, -13), Theme.TextSecondary)
    icon.ZIndex = TabBtn.ZIndex + 1

    -- Notification Badge
    if config.Notification and tonumber(config.Notification) and tonumber(config.Notification) > 0 then
        local badge = Instance.new("Frame")
        badge.Name = "Badge"
        badge.AnchorPoint = Vector2.new(1, 0)
        badge.Position = UDim2.new(1, 0, 0, -3)
        badge.Size = UDim2.new(0, 22, 0, 22)
        badge.BackgroundColor3 = Theme.Error
        badge.BorderSizePixel = 0
        badge.ZIndex = TabBtn.ZIndex + 3
        badge.Parent = TabBtn

        Utilities:AddCorner(badge, 999)

        local badgeText = Instance.new("TextLabel")
        badgeText.Size = UDim2.new(1, 0, 1, 0)
        badgeText.BackgroundTransparency = 1
        badgeText.Text = tostring(config.Notification)
        badgeText.Font = Enum.Font.GothamBold
        badgeText.TextSize = 12
        badgeText.TextColor3 = Theme.Text
        badgeText.ZIndex = badge.ZIndex + 1
        badgeText.Parent = badge

        task.spawn(function()
            while badge.Parent do
                Utilities:Tween(badge, {Size = UDim2.new(0, 24, 0, 24)}, 0.6):Play()
                task.wait(0.6)
                Utilities:Tween(badge, {Size = UDim2.new(0, 22, 0, 22)}, 0.6):Play()
                task.wait(0.6)
            end
        end)
    end

    -- Tab Content
    local TabContent = Instance.new("ScrollingFrame")
    TabContent.Name = config.Name .. "Content"
    TabContent.Size = UDim2.new(1, -40, 1, -40)
    TabContent.Position = UDim2.new(0, 20, 0, 20)
    TabContent.BackgroundTransparency = 1
    TabContent.BorderSizePixel = 0
    TabContent.ScrollBarThickness = 6
    TabContent.ScrollBarImageColor3 = Theme.Primary
    TabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
    TabContent.Visible = false
    TabContent.Parent = window.TabContainer

    local contentLayout = Instance.new("UIListLayout")
    contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    contentLayout.Padding = UDim.new(0, 14)
    contentLayout.Parent = TabContent

    contentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        TabContent.CanvasSize = UDim2.new(0, 0, 0, contentLayout.AbsoluteContentSize.Y + 40)
    end)

    -- Tab Click
    TabBtn.MouseButton1Click:Connect(function()
        for _, tab in pairs(window.Tabs) do
            tab.Content.Visible = false
            Utilities:Tween(tab.Icon, {ImageColor3 = Theme.TextSecondary}, 0.3):Play()
        end

        TabContent.Visible = true
        window.CurrentTab = config.Name
        Utilities:Tween(icon, {ImageColor3 = Theme.Secondary}, 0.3):Play()

        local pos = TabBtn.AbsolutePosition.X - window.ButtonContainer.AbsolutePosition.X
        Utilities:Tween(window.Glider, {
            Position = UDim2.new(0, pos, 0, 0),
            Size = UDim2.new(0, TabBtn.AbsoluteSize.X, 0, 42)
        }, 0.35, Enum.EasingStyle.Quad):Play()
    end)

    TabBtn.MouseEnter:Connect(function()
        if window.CurrentTab ~= config.Name then
            Utilities:Tween(TabBtn, {Size = UDim2.new(0, 68, 0, 44)}, 0.2):Play()
            Utilities:Tween(icon, {ImageColor3 = Theme.Text}, 0.2):Play()
        end
    end)

    TabBtn.MouseLeave:Connect(function()
        if window.CurrentTab ~= config.Name then
            Utilities:Tween(TabBtn, {Size = UDim2.new(0, 65, 0, 42)}, 0.2):Play()
            Utilities:Tween(icon, {ImageColor3 = Theme.TextSecondary}, 0.2):Play()
        end
    end)

    local Tab = {
        Button = TabBtn,
        Content = TabContent,
        Icon = icon,
        Name = config.Name
    }

    window.Tabs[config.Name] = Tab

    if not window.CurrentTab then
        TabBtn.MouseButton1Click()
    end

    return self:CreateTabElements(TabContent, window)
end

-- ═══════════════════════════════════════════════════════════════
-- 🎛️ TAB ELEMENTS API
-- ═══════════════════════════════════════════════════════════════
function DrakthonHub:CreateTabElements(tabContent, window)
    local Elements = {}

    -- ═══════════════════════════════════════════════════════════
    -- 🏷️ LABEL
    -- ═══════════════════════════════════════════════════════════
    function Elements:AddLabel(text)
        local Label = Instance.new("TextLabel")
        Label.Name = "Label"
        Label.Size = UDim2.new(1, 0, 0, 35)
        Label.BackgroundColor3 = Theme.SurfaceLight
        Label.BorderSizePixel = 0
        Label.Font = Enum.Font.Gotham
        Label.TextSize = 15
        Label.TextColor3 = Theme.Text
        Label.Text = text or "Label"
        Label.Parent = tabContent

        Utilities:AddCorner(Label, 10)

        return Label
    end

    -- ═══════════════════════════════════════════════════════════
    -- 🔘 BUTTON
    -- ═══════════════════════════════════════════════════════════
    function Elements:AddButton(config)
        config = config or {}
        config.Text = config.Text or "Button"
        config.Callback = config.Callback or function() end

        local Button = Instance.new("TextButton")
        Button.Name = "Button"
        Button.Size = UDim2.new(1, 0, 0, 45)
        Button.BackgroundColor3 = Theme.SurfaceLight
        Button.BorderSizePixel = 0
        Button.Font = Enum.Font.GothamSemibold
        Button.TextSize = 15
        Button.TextColor3 = Theme.Text
        Button.Text = config.Text
        Button.Parent = tabContent

        Utilities:AddCorner(Button, 12)
        Utilities:CreateRipple(Button)

        local gradient = Utilities:AddGradient(Button, ColorSequence.new{
            ColorSequenceKeypoint.new(0, Theme.SurfaceLight),
            ColorSequenceKeypoint.new(1, Theme.SurfaceLighter)
        }, 90)

        Button.MouseEnter:Connect(function()
            Utilities:Tween(Button, {BackgroundColor3 = Theme.Primary}, 0.3):Play()
        end)

        Button.MouseLeave:Connect(function()
            Utilities:Tween(Button, {BackgroundColor3 = Theme.SurfaceLight}, 0.3):Play()
        end)

        Button.MouseButton1Click:Connect(function()
            Utilities:Tween(Button, {Size = UDim2.new(1, 0, 0, 43)}, 0.1):Play()
            task.wait(0.1)
            Utilities:Tween(Button, {Size = UDim2.new(1, 0, 0, 45)}, 0.1):Play()
            pcall(config.Callback)
        end)

        return Button
    end

    -- ═══════════════════════════════════════════════════════════
    -- 🔲 TOGGLE
    -- ═══════════════════════════════════════════════════════════
    function Elements:AddToggle(config)
        config = config or {}
        config.Text = config.Text or "Toggle"
        config.Default = config.Default or false
        config.Callback = config.Callback or function() end

        local toggled = config.Default

        local ToggleFrame = Instance.new("Frame")
        ToggleFrame.Name = "Toggle"
        ToggleFrame.Size = UDim2.new(1, 0, 0, 48)
        ToggleFrame.BackgroundColor3 = Theme.SurfaceLight
        ToggleFrame.BorderSizePixel = 0
        ToggleFrame.Parent = tabContent

        Utilities:AddCorner(ToggleFrame, 12)

        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, -80, 1, 0)
        label.Position = UDim2.new(0, 18, 0, 0)
        label.BackgroundTransparency = 1
        label.Text = config.Text
        label.Font = Enum.Font.Gotham
        label.TextSize = 15
        label.TextColor3 = Theme.Text
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = ToggleFrame

        local toggleBtn = Instance.new("TextButton")
        toggleBtn.AnchorPoint = Vector2.new(1, 0.5)
        toggleBtn.Position = UDim2.new(1, -18, 0.5, 0)
        toggleBtn.Size = UDim2.new(0, 52, 0, 28)
        toggleBtn.BackgroundColor3 = Theme.Surface
        toggleBtn.BorderSizePixel = 0
        toggleBtn.Text = ""
        toggleBtn.Parent = ToggleFrame

        Utilities:AddCorner(toggleBtn, 14)

        local indicator = Instance.new("Frame")
        indicator.Name = "Indicator"
        indicator.Position = UDim2.new(0, 4, 0.5, -10)
        indicator.Size = UDim2.new(0, 20, 0, 20)
        indicator.BackgroundColor3 = Theme.Text
        indicator.BorderSizePixel = 0
        indicator.Parent = toggleBtn

        Utilities:AddCorner(indicator, 10)

        local function update()
            if toggled then
                Utilities:Tween(toggleBtn, {BackgroundColor3 = Theme.Primary}, 0.3):Play()
                Utilities:Tween(indicator, {Position = UDim2.new(1, -24, 0.5, -10)}, 0.3, Enum.EasingStyle.Quad):Play()
            else
                Utilities:Tween(toggleBtn, {BackgroundColor3 = Theme.Surface}, 0.3):Play()
                Utilities:Tween(indicator, {Position = UDim2.new(0, 4, 0.5, -10)}, 0.3, Enum.EasingStyle.Quad):Play()
            end
            pcall(config.Callback, toggled)
        end

        toggleBtn.MouseButton1Click:Connect(function()
            toggled = not toggled
            update()
        end)

        if config.Default then
            update()
        end

        return ToggleFrame
    end

    -- ═══════════════════════════════════════════════════════════
    -- 🎚️ SLIDER
    -- ═══════════════════════════════════════════════════════════
    function Elements:AddSlider(config)
        config = config or {}
        config.Text = config.Text or "Slider"
        config.Min = config.Min or 0
        config.Max = config.Max or 100
        config.Default = config.Default or 50
        config.Callback = config.Callback or function() end

        local SliderFrame = Instance.new("Frame")
        SliderFrame.Name = "Slider"
        SliderFrame.Size = UDim2.new(1, 0, 0, 70)
        SliderFrame.BackgroundColor3 = Theme.SurfaceLight
        SliderFrame.BorderSizePixel = 0
        SliderFrame.Parent = tabContent

        Utilities:AddCorner(SliderFrame, 12)

        local titleLabel = Instance.new("TextLabel")
        titleLabel.Size = UDim2.new(1, -120, 0, 28)
        titleLabel.Position = UDim2.new(0, 18, 0, 8)
        titleLabel.BackgroundTransparency = 1
        titleLabel.Text = config.Text
        titleLabel.Font = Enum.Font.Gotham
        titleLabel.TextSize = 15
        titleLabel.TextColor3 = Theme.Text
        titleLabel.TextXAlignment = Enum.TextXAlignment.Left
        titleLabel.Parent = SliderFrame

        local valueLabel = Instance.new("TextLabel")
        valueLabel.AnchorPoint = Vector2.new(1, 0)
        valueLabel.Size = UDim2.new(0, 80, 0, 28)
        valueLabel.Position = UDim2.new(1, -18, 0, 8)
        valueLabel.BackgroundTransparency = 1
        valueLabel.Text = tostring(config.Default)
        valueLabel.Font = Enum.Font.GothamBold
        valueLabel.TextSize = 16
        valueLabel.TextColor3 = Theme.Primary
        valueLabel.TextXAlignment = Enum.TextXAlignment.Right
        valueLabel.Parent = SliderFrame

        local sliderBG = Instance.new("Frame")
        sliderBG.Position = UDim2.new(0, 18, 0, 42)
        sliderBG.Size = UDim2.new(1, -36, 0, 8)
        sliderBG.BackgroundColor3 = Theme.Surface
        sliderBG.BorderSizePixel = 0
        sliderBG.Parent = SliderFrame

        Utilities:AddCorner(sliderBG, 4)

        local sliderFill = Instance.new("Frame")
        sliderFill.Name = "Fill"
        sliderFill.Size = UDim2.new(0.5, 0, 1, 0)
        sliderFill.BackgroundColor3 = Theme.Primary
        sliderFill.BorderSizePixel = 0
        sliderFill.Parent = sliderBG

        Utilities:AddCorner(sliderFill, 4)

        local sliderKnob = Instance.new("Frame")
        sliderKnob.AnchorPoint = Vector2.new(0.5, 0.5)
        sliderKnob.Position = UDim2.new(1, 0, 0.5, 0)
        sliderKnob.Size = UDim2.new(0, 18, 0, 18)
        sliderKnob.BackgroundColor3 = Theme.Text
        sliderKnob.BorderSizePixel = 0
        sliderKnob.Parent = sliderFill

        Utilities:AddCorner(sliderKnob, 9)

        local dragging = false
        local currentValue = config.Default

        local function updateSlider(input)
            local pos = math.clamp((input.Position.X - sliderBG.AbsolutePosition.X) / sliderBG.AbsoluteSize.X, 0, 1)
            currentValue = math.floor(config.Min + (config.Max - config.Min) * pos)
            valueLabel.Text = tostring(currentValue)
            
            Utilities:Tween(sliderFill, {Size = UDim2.new(pos, 0, 1, 0)}, 0.1):Play()
            pcall(config.Callback, currentValue)
        end

        sliderKnob.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
            end
        end)

        sliderKnob.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = false
            end
        end)

        UserInputService.InputChanged:Connect(function(input)
            if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                updateSlider(input)
            end
        end)

        sliderBG.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                updateSlider(input)
            end
        end)

        -- Set default
        local defaultPos = (config.Default - config.Min) / (config.Max - config.Min)
        sliderFill.Size = UDim2.new(defaultPos, 0, 1, 0)

        return SliderFrame
    end

    -- ═══════════════════════════════════════════════════════════
    -- ⌨️ TEXTBOX
    -- ═══════════════════════════════════════════════════════════
    function Elements:AddTextbox(config)
        config = config or {}
        config.Text = config.Text or "Textbox"
        config.Placeholder = config.Placeholder or "Enter text..."
        config.Default = config.Default or ""
        config.Callback = config.Callback or function() end

        local TextboxFrame = Instance.new("Frame")
        TextboxFrame.Name = "Textbox"
        TextboxFrame.Size = UDim2.new(1, 0, 0, 68)
        TextboxFrame.BackgroundColor3 = Theme.SurfaceLight
        TextboxFrame.BorderSizePixel = 0
        TextboxFrame.Parent = tabContent

        Utilities:AddCorner(TextboxFrame, 12)

        local titleLabel = Instance.new("TextLabel")
        titleLabel.Size = UDim2.new(1, -36, 0, 22)
        titleLabel.Position = UDim2.new(0, 18, 0, 8)
        titleLabel.BackgroundTransparency = 1
        titleLabel.Text = config.Text
        titleLabel.Font = Enum.Font.Gotham
        titleLabel.TextSize = 14
        titleLabel.TextColor3 = Theme.Text
        titleLabel.TextXAlignment = Enum.TextXAlignment.Left
        titleLabel.Parent = TextboxFrame

        local textBox = Instance.new("TextBox")
        textBox.Position = UDim2.new(0, 18, 0, 35)
        textBox.Size = UDim2.new(1, -36, 0, 28)
        textBox.BackgroundColor3 = Theme.Surface
        textBox.BorderSizePixel = 0
        textBox.Font = Enum.Font.Gotham
        textBox.TextSize = 14
        textBox.TextColor3 = Theme.Text
        textBox.PlaceholderText = config.Placeholder
        textBox.PlaceholderColor3 = Theme.TextSecondary
        textBox.Text = config.Default
        textBox.ClearTextOnFocus = false
        textBox.TextXAlignment = Enum.TextXAlignment.Left
        textBox.Parent = TextboxFrame

        Utilities:AddCorner(textBox, 8)

        local padding = Instance.new("UIPadding")
        padding.PaddingLeft = UDim.new(0, 12)
        padding.PaddingRight = UDim.new(0, 12)
        padding.Parent = textBox

        textBox.Focused:Connect(function()
            Utilities:Tween(textBox, {BackgroundColor3 = Theme.SurfaceLighter}, 0.2):Play()
        end)

        textBox.FocusLost:Connect(function(enter)
            Utilities:Tween(textBox, {BackgroundColor3 = Theme.Surface}, 0.2):Play()
            if enter then
                pcall(config.Callback, textBox.Text)
            end
        end)

        return TextboxFrame
    end

    -- ═══════════════════════════════════════════════════════════
    -- 📋 DROPDOWN
    -- ═══════════════════════════════════════════════════════════
    function Elements:AddDropdown(config)
        config = config or {}
        config.Text = config.Text or "Dropdown"
        config.Options = config.Options or {"Option 1", "Option 2", "Option 3"}
        config.Default = config.Default or config.Options[1]
        config.Callback = config.Callback or function() end

        local DropFrame = Instance.new("Frame")
        DropFrame.Name = "Dropdown"
        DropFrame.Size = UDim2.new(1, 0, 0, 48)
        DropFrame.BackgroundColor3 = Theme.SurfaceLight
        DropFrame.BorderSizePixel = 0
        DropFrame.ClipsDescendants = true
        DropFrame.Parent = tabContent

        Utilities:AddCorner(DropFrame, 12)

        local dropBtn = Instance.new("TextButton")
        dropBtn.Size = UDim2.new(1, 0, 0, 48)
        dropBtn.BackgroundTransparency = 1
        dropBtn.Font = Enum.Font.Gotham
        dropBtn.TextSize = 15
        dropBtn.TextColor3 = Theme.Text
        dropBtn.Text = "   " .. config.Text .. ": " .. config.Default
        dropBtn.TextXAlignment = Enum.TextXAlignment.Left
        dropBtn.Parent = DropFrame

        local arrow = Instance.new("TextLabel")
        arrow.AnchorPoint = Vector2.new(1, 0.5)
        arrow.Position = UDim2.new(1, -20, 0, 24)
        arrow.Size = UDim2.new(0, 20, 0, 20)
        arrow.BackgroundTransparency = 1
        arrow.Text = "▼"
        arrow.Font = Enum.Font.Gotham
        arrow.TextSize = 14
        arrow.TextColor3 = Theme.Primary
        arrow.Parent = DropFrame

        local optionsList = Instance.new("ScrollingFrame")
        optionsList.Position = UDim2.new(0, 8, 0, 48)
        optionsList.Size = UDim2.new(1, -16, 0, 0)
        optionsList.BackgroundTransparency = 1
        optionsList.BorderSizePixel = 0
        optionsList.ScrollBarThickness = 4
        optionsList.ScrollBarImageColor3 = Theme.Primary
        optionsList.CanvasSize = UDim2.new(0, 0, 0, 0)
        optionsList.Parent = DropFrame

        local optionsLayout = Instance.new("UIListLayout")
        optionsLayout.SortOrder = Enum.SortOrder.LayoutOrder
        optionsLayout.Padding = UDim.new(0, 4)
        optionsLayout.Parent = optionsList

        local isOpen = false

        for _, option in ipairs(config.Options) do
            local optBtn = Instance.new("TextButton")
            optBtn.Size = UDim2.new(1, 0, 0, 36)
            optBtn.BackgroundColor3 = Theme.Surface
            optBtn.BorderSizePixel = 0
            optBtn.Font = Enum.Font.Gotham
            optBtn.TextSize = 14
            optBtn.TextColor3 = Theme.Text
            optBtn.Text = option
            optBtn.Parent = optionsList

            Utilities:AddCorner(optBtn, 8)
            Utilities:CreateRipple(optBtn)

            optBtn.MouseEnter:Connect(function()
                Utilities:Tween(optBtn, {BackgroundColor3 = Theme.Primary}, 0.2):Play()
            end)

            optBtn.MouseLeave:Connect(function()
                Utilities:Tween(optBtn, {BackgroundColor3 = Theme.Surface}, 0.2):Play()
            end)

            optBtn.MouseButton1Click:Connect(function()
                dropBtn.Text = "   " .. config.Text .. ": " .. option
                pcall(config.Callback, option)
                
                isOpen = false
                Utilities:Tween(DropFrame, {Size = UDim2.new(1, 0, 0, 48)}, 0.3):Play()
                Utilities:Tween(arrow, {Rotation = 0}, 0.3):Play()
            end)
        end

        optionsLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            optionsList.CanvasSize = UDim2.new(0, 0, 0, optionsLayout.AbsoluteContentSize.Y)
        end)

        dropBtn.MouseButton1Click:Connect(function()
            isOpen = not isOpen
            if isOpen then
                local contentHeight = math.min(optionsLayout.AbsoluteContentSize.Y, 160)
                Utilities:Tween(DropFrame, {Size = UDim2.new(1, 0, 0, 48 + contentHeight + 16)}, 0.3):Play()
                Utilities:Tween(optionsList, {Size = UDim2.new(1, -16, 0, contentHeight)}, 0.3):Play()
                Utilities:Tween(arrow, {Rotation = 180}, 0.3):Play()
            else
                Utilities:Tween(DropFrame, {Size = UDim2.new(1, 0, 0, 48)}, 0.3):Play()
                Utilities:Tween(optionsList, {Size = UDim2.new(1, -16, 0, 0)}, 0.3):Play()
                Utilities:Tween(arrow, {Rotation = 0}, 0.3):Play()
            end
        end)

        return DropFrame
    end

    -- ═══════════════════════════════════════════════════════════
    -- 📦 SECTION
    -- ═══════════════════════════════════════════════════════════
    function Elements:AddSection(text)
        local Section = Instance.new("Frame")
        Section.Name = "Section"
        Section.Size = UDim2.new(1, 0, 0, 40)
        Section.BackgroundTransparency = 1
        Section.Parent = tabContent

        local line1 = Instance.new("Frame")
        line1.Size = UDim2.new(0.3, 0, 0, 2)
        line1.Position = UDim2.new(0, 0, 0.5, -1)
        line1.BackgroundColor3 = Theme.Primary
        line1.BorderSizePixel = 0
        line1.Parent = Section

        Utilities:AddCorner(line1, 1)

        local sectionLabel = Instance.new("TextLabel")
        sectionLabel.AnchorPoint = Vector2.new(0.5, 0.5)
        sectionLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
        sectionLabel.Size = UDim2.new(0.35, 0, 1, 0)
        sectionLabel.BackgroundTransparency = 1
        sectionLabel.Text = text or "Section"
        sectionLabel.Font = Enum.Font.GothamBold
        sectionLabel.TextSize = 16
        sectionLabel.TextColor3 = Theme.Primary
        sectionLabel.Parent = Section

        local line2 = Instance.new("Frame")
        line2.AnchorPoint = Vector2.new(1, 0)
        line2.Size = UDim2.new(0.3, 0, 0, 2)
        line2.Position = UDim2.new(1, 0, 0.5, -1)
        line2.BackgroundColor3 = Theme.Primary
        line2.BorderSizePixel = 0
        line2.Parent = Section

        Utilities:AddCorner(line2, 1)

        return Section
    end

    return Elements
end

-- ═══════════════════════════════════════════════════════════════
-- 🎉 NOTIFICATIONS SYSTEM
-- ═══════════════════════════════════════════════════════════════
function DrakthonHub:Notify(config)
    config = config or {}
    config.Title = config.Title or "Notification"
    config.Description = config.Description or "This is a notification"
    config.Duration = config.Duration or 4
    config.Type = config.Type or "Info" -- Info, Success, Warning, Error

    local notifColor = Theme.Info
    if config.Type == "Success" then
        notifColor = Theme.Success
    elseif config.Type == "Warning" then
        notifColor = Theme.Warning
    elseif config.Type == "Error" then
        notifColor = Theme.Error
    end

    local NotifGui = Instance.new("ScreenGui")
    NotifGui.Name = "DrakthonNotification"
    NotifGui.ResetOnSpawn = false
    NotifGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    NotifGui.DisplayOrder = 9999999999
    
    if gethui then
        NotifGui.Parent = gethui()
    else
        NotifGui.Parent = CoreGui
    end

    local Notif = Instance.new("Frame")
    Notif.AnchorPoint = Vector2.new(1, 0)
    Notif.Position = UDim2.new(1, 20, 0, 20)
    Notif.Size = UDim2.new(0, 320, 0, 80)
    Notif.BackgroundColor3 = Theme.Surface
    Notif.BorderSizePixel = 0
    Notif.Parent = NotifGui

    Utilities:AddCorner(Notif, 12)
    Utilities:AddStroke(Notif, notifColor, 2)

    local accent = Instance.new("Frame")
    accent.Size = UDim2.new(0, 4, 1, 0)
    accent.BackgroundColor3 = notifColor
    accent.BorderSizePixel = 0
    accent.Parent = Notif

    Utilities:AddCorner(accent, 12)

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Position = UDim2.new(0, 18, 0, 10)
    titleLabel.Size = UDim2.new(1, -36, 0, 22)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = config.Title
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 16
    titleLabel.TextColor3 = Theme.Text
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = Notif

    local descLabel = Instance.new("TextLabel")
    descLabel.Position = UDim2.new(0, 18, 0, 35)
    descLabel.Size = UDim2.new(1, -36, 0, 35)
    descLabel.BackgroundTransparency = 1
    descLabel.Text = config.Description
    descLabel.Font = Enum.Font.Gotham
    descLabel.TextSize = 13
    descLabel.TextColor3 = Theme.TextSecondary
    descLabel.TextXAlignment = Enum.TextXAlignment.Left
    descLabel.TextYAlignment = Enum.TextYAlignment.Top
    descLabel.TextWrapped = true
    descLabel.Parent = Notif

    -- Animation
    Utilities:Tween(Notif, {Position = UDim2.new(1, -20, 0, 20)}, 0.5, Enum.EasingStyle.Back):Play()

    task.delay(config.Duration, function()
        Utilities:Tween(Notif, {Position = UDim2.new(1, 20, 0, 20)}, 0.4, Enum.EasingStyle.Quad):Play()
        task.wait(0.5)
        NotifGui:Destroy()
    end)
end

-- ═══════════════════════════════════════════════════════════════
-- 🎯 RETURN LIBRARY
-- ═══════════════════════════════════════════════════════════════
return DrakthonHub
